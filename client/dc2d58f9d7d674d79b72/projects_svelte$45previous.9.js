(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{37:function(e,t,c){"use strict";c.r(t),c.d(t,"META",(function(){return p}));var b=c(0),a=c(9),r=c(1),j=c(4);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function n(){for(var e=0,t=0,c=arguments.length;t<c;t++)e+=arguments[t].length;var b=Array(e),a=0;for(t=0;t<c;t++)for(var r=arguments[t],j=0,n=r.length;j<n;j++,a++)b[a]=r[j];return b}var O=c(10);function s(e){let t,c,a;return{c(){t=Object(b.bb)(e[0]),c=Object(b.bb)(" and "),a=Object(b.bb)(e[1])},l(r){t=Object(b.q)(r,e[0]),c=Object(b.q)(r," and "),a=Object(b.q)(r,e[1])},m(e,r){Object(b.J)(e,t,r),Object(b.J)(e,c,r),Object(b.J)(e,a,r)},p(e,[c]){1&c&&Object(b.V)(t,e[0]),2&c&&Object(b.V)(a,e[1])},i:b.N,o:b.N,d(e){e&&Object(b.z)(t),e&&Object(b.z)(c),e&&Object(b.z)(a)}}}function o(e,t,c){let a,s;const o=O.a.headers;let i=0;const[l,h]=function(e,t){var c=void 0===t?{}:t,b=c.numToTrack,a=void 0===b?2:b,r=c.requireChange,O=void 0===r||r,s=c.isEqual,o=void 0===s?function(e,t){return e===t}:s;if(a<1)throw new Error("Must track at least 1 previous");var i=Array(a).fill(null),l=Object(j.b)(n([e],i)),h=function(e){l.update((function(t){var c=e(t[0]);return O&&o(c,t[0])?t:n([c],t.slice(0,a))}))},d={subscribe:Object(j.a)(l,(function(e){return e[0]})).subscribe,update:h,set:function(e){h((function(){return e}))}},p=n(Array(a)).map((function(e,t){return Object(j.a)(l,(function(e){return e[t+1]}))}));return n([d],p)}(o[i]);return Object(b.r)(e,l,e=>c(0,a=e)),Object(b.r)(e,h,e=>c(1,s=e)),Object(r.c)(()=>{const e=setInterval(()=>{c(4,i=(i+1)%o.length)},3e3);return()=>clearInterval(e)}),e.$$.update=()=>{16&e.$$.dirty&&Object(b.W)(l,a=o[i],a)},[a,s,l,h,i]}class i extends b.b{constructor(e){super(),Object(b.I)(this,e,o,s,b.T,{})}}var l=i,h=c(8);function d(e){let t,c,r,j,n,O,s,o,i,h,d,p,f,y,w,z,A,I,E,x,q,k,Y,S,D,$,V,T,J,P,H,N,C,W,G,M,R,F,L,U,_,B,K,Q,X,Z,ee,te,ce,be,ae,re,je,ne,Oe,se,oe,ie,le,he,de,pe,ge,ue,me,ve,fe,ye,we,ze,Ae,Ie,Ee,xe,qe,ke,Ye,Se,De,$e,Ve,Te,Je,Pe,He,Ne,Ce,We,Ge,Me,Re,Fe,Le,Ue,_e,Be,Ke,Qe,Xe,Ze,et,tt,ct,bt,at,rt,jt,nt,Ot,st,ot,it,lt,ht,dt,pt;return H=new l({}),$e=new a.a({props:{tech:e[1],class:"flex justify-center h-12"}}),{c(){t=Object(b.Y)(),c=Object(b.A)("div"),r=Object(b.A)("div"),j=Object(b.A)("h2"),n=Object(b.bb)(e[0]),O=Object(b.Y)(),s=Object(b.A)("div"),o=Object(b.bb)("Svelte Stores that remember previous values!"),i=Object(b.Y)(),h=Object(b.A)("img"),p=Object(b.Y)(),f=Object(b.A)("div"),y=Object(b.A)("p"),w=Object(b.bb)("Some time back, I was trying to re-create a "),z=Object(b.A)("strong"),A=Object(b.bb)("fancy"),I=Object(b.bb)(" animation I had seen\nonline."),E=Object(b.Y)(),x=Object(b.A)("div"),q=Object(b.A)("p"),k=Object(b.bb)("When doing so, I found myself needing the previous value of the text\nproperty when creating the transition. In fact, I realized that it was\ncommon to reference the old value of a property. However, there was no\nsimple or clean solution at the time."),Y=Object(b.Y)(),S=Object(b.A)("div"),D=Object(b.A)("p"),$=Object(b.bb)("I attempted to develop a package that provided that functionality in the\nmost Svelte-like way! In Svelte, when we need custom behaviour from our\ndata, we should use "),V=Object(b.A)("a"),T=Object(b.bb)("Svelte\nStores"),J=Object(b.bb)("!"),P=Object(b.Y)(),Object(b.t)(H.$$.fragment),N=Object(b.Y)(),W=Object(b.Y)(),G=Object(b.A)("div"),M=Object(b.A)("a"),R=Object(b.bb)("Check it out on Github"),F=Object(b.Y)(),L=Object(b.A)("hr"),U=Object(b.Y)(),_=Object(b.A)("div"),B=Object(b.A)("div"),K=Object(b.A)("h3"),Q=Object(b.bb)("How it works"),X=Object(b.Y)(),Z=Object(b.A)("div"),ee=Object(b.A)("p"),te=Object(b.bb)("The package returns an array of stores — the first being a writable\nstore and the rest being read-only."),ce=Object(b.Y)(),ae=Object(b.Y)(),re=Object(b.A)("div"),je=Object(b.A)("p"),ne=Object(b.bb)("When the stores are initialized, an internal store is created to keep track\nof all revisions made to the value. When the value is updated, we only have\nto increase the index of all revisions by one, and add the new value to the\nhead of the array."),Oe=Object(b.Y)(),se=Object(b.A)("div"),oe=Object(b.A)("p"),ie=Object(b.bb)("To create individual stores from the array store, we can use an underlooked\nfeature of Svelte Stores — "),le=Object(b.A)("a"),he=Object(b.bb)("derived\nstores"),de=Object(b.bb)("."),pe=Object(b.Y)(),ge=Object(b.A)("div"),ue=Object(b.A)("p"),me=Object(b.bb)("We can simply derive stores for each element of the array, and give the\nfirst store a "),ve=Object(b.A)("code"),fe=Object(b.bb)("set"),ye=Object(b.bb)(" and "),we=Object(b.A)("code"),ze=Object(b.bb)("update"),Ae=Object(b.bb)(" function to make it a writable store."),Ie=Object(b.Y)(),Ee=Object(b.A)("hr"),xe=Object(b.Y)(),qe=Object(b.A)("div"),ke=Object(b.A)("div"),Ye=Object(b.A)("h3"),Se=Object(b.bb)("Lessons learnt"),De=Object(b.Y)(),Object(b.t)($e.$$.fragment),Ve=Object(b.Y)(),Te=Object(b.A)("div"),Je=Object(b.A)("p"),Pe=Object(b.bb)("This project was written in "),He=Object(b.A)("strong"),Ne=Object(b.bb)("Typescript"),Ce=Object(b.bb)(", as I truly enjoy the powerful\ntype system. It also gave me another chance to brush up on my understanding\nof "),We=Object(b.A)("strong"),Ge=Object(b.bb)("Svelte"),Me=Object(b.bb)(" and the state management functionality provided by stores."),Re=Object(b.Y)(),Fe=Object(b.A)("div"),Le=Object(b.A)("p"),Ue=Object(b.bb)("More importantly, this project reminded me that the most crucial step in\ndesigning a package is the planning phase before any code is written."),_e=Object(b.Y)(),Be=Object(b.A)("div"),Ke=Object(b.A)("p"),Qe=Object(b.bb)("From the start, I knew that I did not want a difference in data type between\nwriting a value and reading the value from the store. Therefore, I ruled out\nsuch an interface early on:"),Xe=Object(b.Y)(),et=Object(b.Y)(),tt=Object(b.A)("div"),ct=Object(b.bb)("I toyed with the idea of providing a "),bt=Object(b.A)("code"),at=Object(b.bb)(".setCurrent"),rt=Object(b.bb)(" method on the store:"),jt=Object(b.Y)(),Ot=Object(b.Y)(),st=Object(b.A)("div"),ot=Object(b.A)("p"),it=Object(b.bb)("However, the syntax becomes awkward, and it is "),lt=Object(b.A)("strong"),ht=Object(b.bb)("easy to make mistakes"),dt=Object(b.bb)("\nwhen setting the current value. Ultimately, I decided on using a helper\nfunction to instantiate multiple stores that would be coupled together,\nwhich produced the current API design."),this.h()},l(a){Object(b.R)('[data-svelte="svelte-12dosci"]',document.head).forEach(b.z),t=Object(b.p)(a),c=Object(b.o)(a,"DIV",{class:!0});var l=Object(b.m)(c);r=Object(b.o)(l,"DIV",{class:!0});var d=Object(b.m)(r);j=Object(b.o)(d,"H2",{});var g=Object(b.m)(j);n=Object(b.q)(g,e[0]),g.forEach(b.z),d.forEach(b.z),O=Object(b.p)(l),s=Object(b.o)(l,"DIV",{class:!0});var u=Object(b.m)(s);o=Object(b.q)(u,"Svelte Stores that remember previous values!"),u.forEach(b.z),i=Object(b.p)(l),h=Object(b.o)(l,"IMG",{src:!0,alt:!0,class:!0}),p=Object(b.p)(l),f=Object(b.o)(l,"DIV",{class:!0});var m=Object(b.m)(f);y=Object(b.o)(m,"P",{});var v=Object(b.m)(y);w=Object(b.q)(v,"Some time back, I was trying to re-create a "),z=Object(b.o)(v,"STRONG",{});var C=Object(b.m)(z);A=Object(b.q)(C,"fancy"),C.forEach(b.z),I=Object(b.q)(v," animation I had seen\nonline."),v.forEach(b.z),m.forEach(b.z),E=Object(b.p)(l),x=Object(b.o)(l,"DIV",{class:!0});var be=Object(b.m)(x);q=Object(b.o)(be,"P",{});var Ze=Object(b.m)(q);k=Object(b.q)(Ze,"When doing so, I found myself needing the previous value of the text\nproperty when creating the transition. In fact, I realized that it was\ncommon to reference the old value of a property. However, there was no\nsimple or clean solution at the time."),Ze.forEach(b.z),be.forEach(b.z),Y=Object(b.p)(l),S=Object(b.o)(l,"DIV",{class:!0});var nt=Object(b.m)(S);D=Object(b.o)(nt,"P",{});var pt=Object(b.m)(D);$=Object(b.q)(pt,"I attempted to develop a package that provided that functionality in the\nmost Svelte-like way! In Svelte, when we need custom behaviour from our\ndata, we should use "),V=Object(b.o)(pt,"A",{href:!0});var gt=Object(b.m)(V);T=Object(b.q)(gt,"Svelte\nStores"),gt.forEach(b.z),J=Object(b.q)(pt,"!"),pt.forEach(b.z),nt.forEach(b.z),P=Object(b.p)(l),Object(b.n)(H.$$.fragment,l),N=Object(b.p)(l),l.forEach(b.z),W=Object(b.p)(a),G=Object(b.o)(a,"DIV",{class:!0});var ut=Object(b.m)(G);M=Object(b.o)(ut,"A",{href:!0,class:!0});var mt=Object(b.m)(M);R=Object(b.q)(mt,"Check it out on Github"),mt.forEach(b.z),ut.forEach(b.z),F=Object(b.p)(a),L=Object(b.o)(a,"HR",{}),U=Object(b.p)(a),_=Object(b.o)(a,"DIV",{class:!0});var vt=Object(b.m)(_);B=Object(b.o)(vt,"DIV",{class:!0});var ft=Object(b.m)(B);K=Object(b.o)(ft,"H3",{});var yt=Object(b.m)(K);Q=Object(b.q)(yt,"How it works"),yt.forEach(b.z),ft.forEach(b.z),X=Object(b.p)(vt),Z=Object(b.o)(vt,"DIV",{class:!0});var wt=Object(b.m)(Z);ee=Object(b.o)(wt,"P",{});var zt=Object(b.m)(ee);te=Object(b.q)(zt,"The package returns an array of stores — the first being a writable\nstore and the rest being read-only."),zt.forEach(b.z),wt.forEach(b.z),ce=Object(b.p)(vt),ae=Object(b.p)(vt),re=Object(b.o)(vt,"DIV",{class:!0});var At=Object(b.m)(re);je=Object(b.o)(At,"P",{});var It=Object(b.m)(je);ne=Object(b.q)(It,"When the stores are initialized, an internal store is created to keep track\nof all revisions made to the value. When the value is updated, we only have\nto increase the index of all revisions by one, and add the new value to the\nhead of the array."),It.forEach(b.z),At.forEach(b.z),Oe=Object(b.p)(vt),se=Object(b.o)(vt,"DIV",{class:!0});var Et=Object(b.m)(se);oe=Object(b.o)(Et,"P",{});var xt=Object(b.m)(oe);ie=Object(b.q)(xt,"To create individual stores from the array store, we can use an underlooked\nfeature of Svelte Stores — "),le=Object(b.o)(xt,"A",{href:!0});var qt=Object(b.m)(le);he=Object(b.q)(qt,"derived\nstores"),qt.forEach(b.z),de=Object(b.q)(xt,"."),xt.forEach(b.z),Et.forEach(b.z),pe=Object(b.p)(vt),ge=Object(b.o)(vt,"DIV",{class:!0});var kt=Object(b.m)(ge);ue=Object(b.o)(kt,"P",{});var Yt=Object(b.m)(ue);me=Object(b.q)(Yt,"We can simply derive stores for each element of the array, and give the\nfirst store a "),ve=Object(b.o)(Yt,"CODE",{});var St=Object(b.m)(ve);fe=Object(b.q)(St,"set"),St.forEach(b.z),ye=Object(b.q)(Yt," and "),we=Object(b.o)(Yt,"CODE",{});var Dt=Object(b.m)(we);ze=Object(b.q)(Dt,"update"),Dt.forEach(b.z),Ae=Object(b.q)(Yt," function to make it a writable store."),Yt.forEach(b.z),kt.forEach(b.z),vt.forEach(b.z),Ie=Object(b.p)(a),Ee=Object(b.o)(a,"HR",{}),xe=Object(b.p)(a),qe=Object(b.o)(a,"DIV",{class:!0});var $t=Object(b.m)(qe);ke=Object(b.o)($t,"DIV",{class:!0});var Vt=Object(b.m)(ke);Ye=Object(b.o)(Vt,"H3",{});var Tt=Object(b.m)(Ye);Se=Object(b.q)(Tt,"Lessons learnt"),Tt.forEach(b.z),Vt.forEach(b.z),De=Object(b.p)($t),Object(b.n)($e.$$.fragment,$t),Ve=Object(b.p)($t),Te=Object(b.o)($t,"DIV",{class:!0});var Jt=Object(b.m)(Te);Je=Object(b.o)(Jt,"P",{});var Pt=Object(b.m)(Je);Pe=Object(b.q)(Pt,"This project was written in "),He=Object(b.o)(Pt,"STRONG",{});var Ht=Object(b.m)(He);Ne=Object(b.q)(Ht,"Typescript"),Ht.forEach(b.z),Ce=Object(b.q)(Pt,", as I truly enjoy the powerful\ntype system. It also gave me another chance to brush up on my understanding\nof "),We=Object(b.o)(Pt,"STRONG",{});var Nt=Object(b.m)(We);Ge=Object(b.q)(Nt,"Svelte"),Nt.forEach(b.z),Me=Object(b.q)(Pt," and the state management functionality provided by stores."),Pt.forEach(b.z),Jt.forEach(b.z),Re=Object(b.p)($t),Fe=Object(b.o)($t,"DIV",{class:!0});var Ct=Object(b.m)(Fe);Le=Object(b.o)(Ct,"P",{});var Wt=Object(b.m)(Le);Ue=Object(b.q)(Wt,"More importantly, this project reminded me that the most crucial step in\ndesigning a package is the planning phase before any code is written."),Wt.forEach(b.z),Ct.forEach(b.z),_e=Object(b.p)($t),Be=Object(b.o)($t,"DIV",{class:!0});var Gt=Object(b.m)(Be);Ke=Object(b.o)(Gt,"P",{});var Mt=Object(b.m)(Ke);Qe=Object(b.q)(Mt,"From the start, I knew that I did not want a difference in data type between\nwriting a value and reading the value from the store. Therefore, I ruled out\nsuch an interface early on:"),Mt.forEach(b.z),Gt.forEach(b.z),Xe=Object(b.p)($t),et=Object(b.p)($t),tt=Object(b.o)($t,"DIV",{class:!0});var Rt=Object(b.m)(tt);ct=Object(b.q)(Rt,"I toyed with the idea of providing a "),bt=Object(b.o)(Rt,"CODE",{});var Ft=Object(b.m)(bt);at=Object(b.q)(Ft,".setCurrent"),Ft.forEach(b.z),rt=Object(b.q)(Rt," method on the store:"),Rt.forEach(b.z),jt=Object(b.p)($t),Ot=Object(b.p)($t),st=Object(b.o)($t,"DIV",{class:!0});var Lt=Object(b.m)(st);ot=Object(b.o)(Lt,"P",{});var Ut=Object(b.m)(ot);it=Object(b.q)(Ut,"However, the syntax becomes awkward, and it is "),lt=Object(b.o)(Ut,"STRONG",{});var _t=Object(b.m)(lt);ht=Object(b.q)(_t,"easy to make mistakes"),_t.forEach(b.z),dt=Object(b.q)(Ut,"\nwhen setting the current value. Ultimately, I decided on using a helper\nfunction to instantiate multiple stores that would be coupled together,\nwhich produced the current API design."),Ut.forEach(b.z),Lt.forEach(b.z),$t.forEach(b.z),this.h()},h(){document.title="svelte-previous",Object(b.i)(r,"class","font-mono text-center"),Object(b.i)(s,"class","text-center italic"),h.src!==(d=e[2])&&Object(b.i)(h,"src",d),Object(b.i)(h,"alt",e[0]),Object(b.i)(h,"class","mx-auto max-h-48"),Object(b.i)(f,"class","px-3 py-1 card leading-8"),Object(b.i)(x,"class","px-3 py-1 card leading-8"),Object(b.i)(V,"href","https://svelte.dev/tutorial/writable-stores"),Object(b.i)(S,"class","px-3 py-1 card leading-8"),C=new b.a(null),Object(b.i)(c,"class","mx-auto my-10 prose space-y-3"),Object(b.i)(M,"href",e[3]),Object(b.i)(M,"class","p-3 italic font-bold cta-button"),Object(b.i)(G,"class","flex justify-center my-10"),Object(b.i)(B,"class","font-mono text-center"),Object(b.i)(Z,"class","px-3 py-1 card leading-8"),be=new b.a(ae),Object(b.i)(re,"class","px-3 py-1 card leading-8"),Object(b.i)(le,"href","https://svelte.dev/tutorial/derived-stores"),Object(b.i)(se,"class","px-3 py-1 card leading-8"),Object(b.i)(ge,"class","px-3 py-1 card leading-8"),Object(b.i)(_,"class","mx-auto my-10 prose space-y-3"),Object(b.i)(ke,"class","font-mono text-center"),Object(b.i)(Te,"class","px-3 py-1 card leading-8"),Object(b.i)(Fe,"class","px-3 py-1 card leading-8"),Object(b.i)(Be,"class","px-3 py-1 card leading-8"),Ze=new b.a(et),Object(b.i)(tt,"class","px-3 py-1 card leading-8"),nt=new b.a(Ot),Object(b.i)(st,"class","px-3 py-1 card leading-8"),Object(b.i)(qe,"class","mx-auto my-10 prose space-y-3")},m(e,a){Object(b.J)(e,t,a),Object(b.J)(e,c,a),Object(b.g)(c,r),Object(b.g)(r,j),Object(b.g)(j,n),Object(b.g)(c,O),Object(b.g)(c,s),Object(b.g)(s,o),Object(b.g)(c,i),Object(b.g)(c,h),Object(b.g)(c,p),Object(b.g)(c,f),Object(b.g)(f,y),Object(b.g)(y,w),Object(b.g)(y,z),Object(b.g)(z,A),Object(b.g)(y,I),Object(b.g)(c,E),Object(b.g)(c,x),Object(b.g)(x,q),Object(b.g)(q,k),Object(b.g)(c,Y),Object(b.g)(c,S),Object(b.g)(S,D),Object(b.g)(D,$),Object(b.g)(D,V),Object(b.g)(V,T),Object(b.g)(D,J),Object(b.g)(c,P),Object(b.M)(H,c,null),Object(b.g)(c,N),C.m(g,c),Object(b.J)(e,W,a),Object(b.J)(e,G,a),Object(b.g)(G,M),Object(b.g)(M,R),Object(b.J)(e,F,a),Object(b.J)(e,L,a),Object(b.J)(e,U,a),Object(b.J)(e,_,a),Object(b.g)(_,B),Object(b.g)(B,K),Object(b.g)(K,Q),Object(b.g)(_,X),Object(b.g)(_,Z),Object(b.g)(Z,ee),Object(b.g)(ee,te),Object(b.g)(_,ce),be.m(u,_),Object(b.g)(_,ae),Object(b.g)(_,re),Object(b.g)(re,je),Object(b.g)(je,ne),Object(b.g)(_,Oe),Object(b.g)(_,se),Object(b.g)(se,oe),Object(b.g)(oe,ie),Object(b.g)(oe,le),Object(b.g)(le,he),Object(b.g)(oe,de),Object(b.g)(_,pe),Object(b.g)(_,ge),Object(b.g)(ge,ue),Object(b.g)(ue,me),Object(b.g)(ue,ve),Object(b.g)(ve,fe),Object(b.g)(ue,ye),Object(b.g)(ue,we),Object(b.g)(we,ze),Object(b.g)(ue,Ae),Object(b.J)(e,Ie,a),Object(b.J)(e,Ee,a),Object(b.J)(e,xe,a),Object(b.J)(e,qe,a),Object(b.g)(qe,ke),Object(b.g)(ke,Ye),Object(b.g)(Ye,Se),Object(b.g)(qe,De),Object(b.M)($e,qe,null),Object(b.g)(qe,Ve),Object(b.g)(qe,Te),Object(b.g)(Te,Je),Object(b.g)(Je,Pe),Object(b.g)(Je,He),Object(b.g)(He,Ne),Object(b.g)(Je,Ce),Object(b.g)(Je,We),Object(b.g)(We,Ge),Object(b.g)(Je,Me),Object(b.g)(qe,Re),Object(b.g)(qe,Fe),Object(b.g)(Fe,Le),Object(b.g)(Le,Ue),Object(b.g)(qe,_e),Object(b.g)(qe,Be),Object(b.g)(Be,Ke),Object(b.g)(Ke,Qe),Object(b.g)(qe,Xe),Ze.m(m,qe),Object(b.g)(qe,et),Object(b.g)(qe,tt),Object(b.g)(tt,ct),Object(b.g)(tt,bt),Object(b.g)(bt,at),Object(b.g)(tt,rt),Object(b.g)(qe,jt),nt.m(v,qe),Object(b.g)(qe,Ot),Object(b.g)(qe,st),Object(b.g)(st,ot),Object(b.g)(ot,it),Object(b.g)(ot,lt),Object(b.g)(lt,ht),Object(b.g)(ot,dt),pt=!0},p:b.N,i(e){pt||(Object(b.db)(H.$$.fragment,e),Object(b.db)($e.$$.fragment,e),pt=!0)},o(e){Object(b.eb)(H.$$.fragment,e),Object(b.eb)($e.$$.fragment,e),pt=!1},d(e){e&&Object(b.z)(t),e&&Object(b.z)(c),Object(b.x)(H),e&&Object(b.z)(W),e&&Object(b.z)(G),e&&Object(b.z)(F),e&&Object(b.z)(L),e&&Object(b.z)(U),e&&Object(b.z)(_),e&&Object(b.z)(Ie),e&&Object(b.z)(Ee),e&&Object(b.z)(xe),e&&Object(b.z)(qe),Object(b.x)($e)}}}const p={},g='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n',u='<pre><code class="language-ts">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> name = <span class="hljs-string">&#x27;bryan&#x27;</span>;\n  <span class="hljs-keyword">const</span> [currentName, previousName] = withPrevious(name);</code></pre>\n',m='<pre><code class="language-ts">  $name = <span class="hljs-string">&#x27;adam&#x27;</span>;\n  <span class="hljs-built_in">console</span>.log($name); <span class="hljs-comment">// &#123; current: &#x27;adam&#x27;, previous: &#x27;bryan&#x27; &#125;</span></code></pre>\n',v='<pre><code class="language-ts">  name.setCurrent(<span class="hljs-string">&#x27;adam&#x27;</span>);\n  <span class="hljs-built_in">console</span>.log($name); <span class="hljs-comment">// &#123; current: &#x27;adam&#x27;, previous: &#x27;bryan&#x27; &#125;</span></code></pre>\n';function f(e){const{projectName:t,tech:c,logo:b,github:a}=h.a.projects["svelte-previous"];return[t,c,b,a]}class y extends b.b{constructor(e){super(),Object(b.I)(this,e,f,d,b.T,{})}}t.default=y}}]);